package oop_kiosk_medihub;

import java.sql.Connection;
import java.sql.DriverManager;
import java.sql.PreparedStatement;
import java.sql.ResultSet;
import java.sql.SQLException;
import java.util.ArrayList;


public class Patients {
	private PreparedStatement psmt;
	private Connection connection;

	// 수정한 데이터 업데이트
	public void updatePatients(String id, String name, String number, String medicalreport, 
			String payment, String office, String disease, String medicine, String doses, String fee) {
			String updateQuery = "UPDATE patients "
					+ "SET id = ?, name = ?, number = ?, medicalreport = ?, payment = ?, office = ?, disease = ?, medicine = ?, doses = ?, fee = ? "
					+ "WHERE id = ?";
			try (PreparedStatement preparedStatement = connection.prepareStatement(updateQuery)) {
				preparedStatement.setString(1, id);
				preparedStatement.setString(2, name);
				preparedStatement.setString(3, number);
				preparedStatement.setString(4, medicalreport);
				preparedStatement.setString(5, payment);
				preparedStatement.setString(6, office);
				preparedStatement.setString(7, disease);
	            preparedStatement.setString(8, medicine);
	            preparedStatement.setString(9, doses);
	            preparedStatement.setString(10, fee);
	            // 수정된 데이터베이스 업데이트 쿼리 실행
                preparedStatement.executeUpdate();
                System.out.println("환자 정보가 변경되었습니다");
			} catch(Exception e) {
				e.printStackTrace();
			}
	}
	
	// get last ID
	public int getLastId() {
		try {
			connection = getConnection();
			psmt = connection.prepareStatement("SELECT id FROM patients ORDER BY id DESC LIMIT 1;");
			ResultSet rs = psmt.executeQuery();
			rs.next();  //ResultSet에서 데이터를 읽을 때 cursor point를 첫 번째 로우에 맞추어야 한다.
			return rs.getInt(1);
		} catch(Exception e) {
			System.out.println(e.getMessage());
			return -1; 
		}
	}
	
	// 환자 정보 삭제하기
	public void deletePatients(String id) {
		try {
			connection = getConnection();
			psmt = connection.prepareStatement("DELETE FROM patients WHERE id = '" + id + "'");
			psmt.executeUpdate();
			System.out.println("환자 정보가 삭제되었습니다");
		} catch(Exception e) {
			System.out.println(e.getMessage());
		}
	}

	// table 데이터 가져오기 
	public String[][] getPatients(){ 
		try {
			connection = getConnection();
			psmt = connection.prepareStatement("SELECT id, name, number, medicalreport, payment, office, disease, medicine, doses, fee FROM patients");
			ResultSet rs = psmt.executeQuery();
			ArrayList<String[]> list = new ArrayList<String[]>(); 
			while(rs.next()) {
				list.add(new String[] {
						rs.getString("id"),
						rs.getString("name"),
						rs.getString("number"),
						rs.getString("medicalreport"),
						rs.getString("payment"),
						rs.getString("office"),
						rs.getString("disease"),
						rs.getString("medicine"),
						rs.getString("doses"),
						rs.getString("fee")
				});
			}
			String[][] arr = new String[list.size()][10];
			return list.toArray(arr);
		} catch(Exception e) {
			System.out.println(e.getMessage());
			return null;
		} 
	}

	// database 연결
	public Connection getConnection() {
		try {
			Class.forName("com.mysql.cj.jdbc.Driver");
			String url = "jdbc:mysql://medihub.cfk4qw22eogv.us-east-1.rds.amazonaws.com:3306/medihub";
			String user = "admin";
			String pwd = "12345678";

			connection = DriverManager.getConnection(url, user, pwd);
			System.out.println("DB 연결 완료");
			return connection;
		} catch (ClassNotFoundException e) {
			System.out.println("JDBC 드라이버 로드 에러");
			return null;
		} catch (SQLException e) {
			System.out.println("DB 연결 오류");
			return null;
		}
	}
}
